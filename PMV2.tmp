{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dQO4y83BiZTN","outputId":"7e71c14c-6e53-4c81-bd5a-28f983babc15"},"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: firebase_admin in /usr/local/lib/python3.12/dist-packages (6.9.0)\n","Requirement already satisfied: scikit-learn in /usr/local/lib/python3.12/dist-packages (1.6.1)\n","Requirement already satisfied: cachecontrol>=0.12.14 in /usr/local/lib/python3.12/dist-packages (from firebase_admin) (0.14.3)\n","Requirement already satisfied: google-api-python-client>=1.7.8 in /usr/local/lib/python3.12/dist-packages (from firebase_admin) (2.185.0)\n","Requirement already satisfied: google-cloud-storage>=1.37.1 in /usr/local/lib/python3.12/dist-packages (from firebase_admin) (2.19.0)\n","Requirement already satisfied: pyjwt>=2.5.0 in /usr/local/lib/python3.12/dist-packages (from pyjwt[crypto]>=2.5.0->firebase_admin) (2.10.1)\n","Requirement already satisfied: httpx==0.28.1 in /usr/local/lib/python3.12/dist-packages (from httpx[http2]==0.28.1->firebase_admin) (0.28.1)\n","Requirement already satisfied: google-api-core<3.0.0dev,>=1.22.1 in /usr/local/lib/python3.12/dist-packages (from google-api-core[grpc]<3.0.0dev,>=1.22.1; platform_python_implementation != \"PyPy\"->firebase_admin) (2.27.0)\n","Requirement already satisfied: google-cloud-firestore>=2.19.0 in /usr/local/lib/python3.12/dist-packages (from firebase_admin) (2.21.0)\n","Requirement already satisfied: anyio in /usr/local/lib/python3.12/dist-packages (from httpx==0.28.1->httpx[http2]==0.28.1->firebase_admin) (4.11.0)\n","Requirement already satisfied: certifi in /usr/local/lib/python3.12/dist-packages (from httpx==0.28.1->httpx[http2]==0.28.1->firebase_admin) (2025.10.5)\n","Requirement already satisfied: httpcore==1.* in /usr/local/lib/python3.12/dist-packages (from httpx==0.28.1->httpx[http2]==0.28.1->firebase_admin) (1.0.9)\n","Requirement already satisfied: idna in /usr/local/lib/python3.12/dist-packages (from httpx==0.28.1->httpx[http2]==0.28.1->firebase_admin) (3.11)\n","Requirement already satisfied: h2<5,>=3 in /usr/local/lib/python3.12/dist-packages (from httpx[http2]==0.28.1->firebase_admin) (4.3.0)\n","Requirement already satisfied: h11>=0.16 in /usr/local/lib/python3.12/dist-packages (from httpcore==1.*->httpx==0.28.1->httpx[http2]==0.28.1->firebase_admin) (0.16.0)\n","Requirement already satisfied: numpy>=1.19.5 in /usr/local/lib/python3.12/dist-packages (from scikit-learn) (2.0.2)\n","Requirement already satisfied: scipy>=1.6.0 in /usr/local/lib/python3.12/dist-packages (from scikit-learn) (1.16.2)\n","Requirement already satisfied: joblib>=1.2.0 in /usr/local/lib/python3.12/dist-packages (from scikit-learn) (1.5.2)\n","Requirement already satisfied: threadpoolctl>=3.1.0 in /usr/local/lib/python3.12/dist-packages (from scikit-learn) (3.6.0)\n","Requirement already satisfied: requests>=2.16.0 in /usr/local/lib/python3.12/dist-packages (from cachecontrol>=0.12.14->firebase_admin) (2.32.4)\n","Requirement already satisfied: msgpack<2.0.0,>=0.5.2 in /usr/local/lib/python3.12/dist-packages (from cachecontrol>=0.12.14->firebase_admin) (1.1.2)\n","Requirement already satisfied: googleapis-common-protos<2.0.0,>=1.56.2 in /usr/local/lib/python3.12/dist-packages (from google-api-core<3.0.0dev,>=1.22.1->google-api-core[grpc]<3.0.0dev,>=1.22.1; platform_python_implementation != \"PyPy\"->firebase_admin) (1.71.0)\n","Requirement already satisfied: protobuf!=3.20.0,!=3.20.1,!=4.21.0,!=4.21.1,!=4.21.2,!=4.21.3,!=4.21.4,!=4.21.5,<7.0.0,>=3.19.5 in /usr/local/lib/python3.12/dist-packages (from google-api-core<3.0.0dev,>=1.22.1->google-api-core[grpc]<3.0.0dev,>=1.22.1; platform_python_implementation != \"PyPy\"->firebase_admin) (5.29.5)\n","Requirement already satisfied: proto-plus<2.0.0,>=1.22.3 in /usr/local/lib/python3.12/dist-packages (from google-api-core<3.0.0dev,>=1.22.1->google-api-core[grpc]<3.0.0dev,>=1.22.1; platform_python_implementation != \"PyPy\"->firebase_admin) (1.26.1)\n","Requirement already satisfied: google-auth<3.0.0,>=2.14.1 in /usr/local/lib/python3.12/dist-packages (from google-api-core<3.0.0dev,>=1.22.1->google-api-core[grpc]<3.0.0dev,>=1.22.1; platform_python_implementation != \"PyPy\"->firebase_admin) (2.38.0)\n","Requirement already satisfied: grpcio<2.0.0,>=1.33.2 in /usr/local/lib/python3.12/dist-packages (from google-api-core[grpc]<3.0.0dev,>=1.22.1; platform_python_implementation != \"PyPy\"->firebase_admin) (1.76.0)\n","Requirement already satisfied: grpcio-status<2.0.0,>=1.33.2 in /usr/local/lib/python3.12/dist-packages (from google-api-core[grpc]<3.0.0dev,>=1.22.1; platform_python_implementation != \"PyPy\"->firebase_admin) (1.71.2)\n","Requirement already satisfied: httplib2<1.0.0,>=0.19.0 in /usr/local/lib/python3.12/dist-packages (from google-api-python-client>=1.7.8->firebase_admin) (0.31.0)\n","Requirement already satisfied: google-auth-httplib2<1.0.0,>=0.2.0 in /usr/local/lib/python3.12/dist-packages (from google-api-python-client>=1.7.8->firebase_admin) (0.2.0)\n","Requirement already satisfied: uritemplate<5,>=3.0.1 in /usr/local/lib/python3.12/dist-packages (from google-api-python-client>=1.7.8->firebase_admin) (4.2.0)\n","Requirement already satisfied: google-cloud-core<3.0.0,>=1.4.1 in /usr/local/lib/python3.12/dist-packages (from google-cloud-firestore>=2.19.0->firebase_admin) (2.4.3)\n","Requirement already satisfied: google-resumable-media>=2.7.2 in /usr/local/lib/python3.12/dist-packages (from google-cloud-storage>=1.37.1->firebase_admin) (2.7.2)\n","Requirement already satisfied: google-crc32c<2.0dev,>=1.0 in /usr/local/lib/python3.12/dist-packages (from google-cloud-storage>=1.37.1->firebase_admin) (1.7.1)\n","Requirement already satisfied: cryptography>=3.4.0 in /usr/local/lib/python3.12/dist-packages (from pyjwt[crypto]>=2.5.0->firebase_admin) (43.0.3)\n","Requirement already satisfied: cffi>=1.12 in /usr/local/lib/python3.12/dist-packages (from cryptography>=3.4.0->pyjwt[crypto]>=2.5.0->firebase_admin) (2.0.0)\n","Requirement already satisfied: cachetools<6.0,>=2.0.0 in /usr/local/lib/python3.12/dist-packages (from google-auth<3.0.0,>=2.14.1->google-api-core<3.0.0dev,>=1.22.1->google-api-core[grpc]<3.0.0dev,>=1.22.1; platform_python_implementation != \"PyPy\"->firebase_admin) (5.5.2)\n","Requirement already satisfied: pyasn1-modules>=0.2.1 in /usr/local/lib/python3.12/dist-packages (from google-auth<3.0.0,>=2.14.1->google-api-core<3.0.0dev,>=1.22.1->google-api-core[grpc]<3.0.0dev,>=1.22.1; platform_python_implementation != \"PyPy\"->firebase_admin) (0.4.2)\n","Requirement already satisfied: rsa<5,>=3.1.4 in /usr/local/lib/python3.12/dist-packages (from google-auth<3.0.0,>=2.14.1->google-api-core<3.0.0dev,>=1.22.1->google-api-core[grpc]<3.0.0dev,>=1.22.1; platform_python_implementation != \"PyPy\"->firebase_admin) (4.9.1)\n","Requirement already satisfied: typing-extensions~=4.12 in /usr/local/lib/python3.12/dist-packages (from grpcio<2.0.0,>=1.33.2->google-api-core[grpc]<3.0.0dev,>=1.22.1; platform_python_implementation != \"PyPy\"->firebase_admin) (4.15.0)\n","Requirement already satisfied: hyperframe<7,>=6.1 in /usr/local/lib/python3.12/dist-packages (from h2<5,>=3->httpx[http2]==0.28.1->firebase_admin) (6.1.0)\n","Requirement already satisfied: hpack<5,>=4.1 in /usr/local/lib/python3.12/dist-packages (from h2<5,>=3->httpx[http2]==0.28.1->firebase_admin) (4.1.0)\n","Requirement already satisfied: pyparsing<4,>=3.0.4 in /usr/local/lib/python3.12/dist-packages (from httplib2<1.0.0,>=0.19.0->google-api-python-client>=1.7.8->firebase_admin) (3.2.5)\n","Requirement already satisfied: charset_normalizer<4,>=2 in /usr/local/lib/python3.12/dist-packages (from requests>=2.16.0->cachecontrol>=0.12.14->firebase_admin) (3.4.4)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.12/dist-packages (from requests>=2.16.0->cachecontrol>=0.12.14->firebase_admin) (2.5.0)\n","Requirement already satisfied: sniffio>=1.1 in /usr/local/lib/python3.12/dist-packages (from anyio->httpx==0.28.1->httpx[http2]==0.28.1->firebase_admin) (1.3.1)\n","Requirement already satisfied: pycparser in /usr/local/lib/python3.12/dist-packages (from cffi>=1.12->cryptography>=3.4.0->pyjwt[crypto]>=2.5.0->firebase_admin) (2.23)\n","Requirement already satisfied: pyasn1<0.7.0,>=0.6.1 in /usr/local/lib/python3.12/dist-packages (from pyasn1-modules>=0.2.1->google-auth<3.0.0,>=2.14.1->google-api-core<3.0.0dev,>=1.22.1->google-api-core[grpc]<3.0.0dev,>=1.22.1; platform_python_implementation != \"PyPy\"->firebase_admin) (0.6.1)\n","‚úÖ Conectado correctamente a Firebase\n","ü§ñ Modelo entrenado correctamente con emoci√≥n 'neutral' incluida.\n","üí¨ EMOTIBOT PMV2 - Versi√≥n Corregida (con 'neutral')\n"]}],"source":["# ============================================\n","# EMOTIBOT - PMV2 (versi√≥n corregida con emoci√≥n neutral)\n","# Chatbot con Firebase y Recomendaciones Personalizadas\n","# Universidad Continental - 2025\n","# ============================================\n","\n","!pip install firebase_admin scikit-learn\n","\n","import random\n","import time\n","from datetime import datetime\n","import firebase_admin\n","from firebase_admin import credentials, firestore\n","from sklearn.feature_extraction.text import TfidfVectorizer\n","from sklearn.ensemble import RandomForestClassifier\n","\n","# --------------------------------------------\n","# 1Ô∏è‚É£ Conexi√≥n con Firebase\n","# --------------------------------------------\n","if not firebase_admin._apps:\n","    cred = credentials.Certificate(\"/content/chatbot-78eec-firebase-adminsdk-fbsvc-5a688937c9.json\")\n","    firebase_admin.initialize_app(cred)\n","\n","db = firestore.client()\n","print(\"‚úÖ Conectado correctamente a Firebase\")\n","\n","# --------------------------------------------\n","# 2Ô∏è‚É£ Base de entrenamiento (incluye emoci√≥n 'neutral')\n","# --------------------------------------------\n","frases = [\n","    # Tristeza / depresi√≥n\n","    \"Estoy deprimido\", \"Me siento mal\", \"Estoy desanimado\", \"No tengo ganas de nada\",\n","    \"Siento que nada tiene sentido\", \"Estoy sin energ√≠a\", \"Estoy triste y sin motivaci√≥n\",\n","    # Ansiedad\n","    \"Estoy ansioso\", \"Me siento nervioso\", \"Tengo miedo\", \"Estoy preocupado\",\n","    \"No puedo dormir por ansiedad\", \"Estoy tenso\", \"Siento mucha presi√≥n\", \"No puedo concentrarme\",\n","    # Felicidad\n","    \"Estoy feliz\", \"Todo va bien\", \"Me siento genial\", \"Estoy contento\", \"Hoy fue un gran d√≠a\",\n","    # Enojo\n","    \"Estoy enojado\", \"Me siento molesto\", \"Estoy frustrado\", \"No quiero hablar con nadie\",\n","    # Ayuda\n","    \"Necesito ayuda\", \"No s√© qu√© hacer\", \"Por favor ap√≥yame\", \"Me siento solo\",\n","    # Neutral / saludo\n","    \"hola\", \"buenos d√≠as\", \"buenas tardes\", \"c√≥mo est√°s\", \"gracias\", \"qu√© tal\", \"hola amigo\", \"buenas noches\", \"todo bien\", \"me cuentas algo\"\n","]\n","\n","emociones = [\n","    \"triste\", \"triste\", \"triste\", \"triste\", \"triste\", \"triste\", \"triste\",\n","    \"ansioso\", \"ansioso\", \"ansioso\", \"ansioso\", \"ansioso\", \"ansioso\", \"ansioso\", \"ansioso\",\n","    \"feliz\", \"feliz\", \"feliz\", \"feliz\", \"feliz\",\n","    \"enojado\", \"enojado\", \"enojado\", \"enojado\",\n","    \"ayuda\", \"ayuda\", \"ayuda\", \"ayuda\",\n","    \"neutral\", \"neutral\", \"neutral\", \"neutral\", \"neutral\", \"neutral\", \"neutral\", \"neutral\", \"neutral\", \"neutral\"\n","]\n","\n","# Entrenar modelo\n","vectorizer = TfidfVectorizer(ngram_range=(1,2))\n","X = vectorizer.fit_transform(frases)\n","clf = RandomForestClassifier(n_estimators=500, random_state=42)\n","clf.fit(X, emociones)\n","\n","print(\"ü§ñ Modelo entrenado correctamente con emoci√≥n 'neutral' incluida.\")\n","\n","# --------------------------------------------\n","# 3Ô∏è‚É£ Recomendaciones personalizadas\n","# --------------------------------------------\n","recomendaciones = {\n","    \"triste\": [\n","        \"Lamento que te sientas as√≠ üòî. Puedes tomar un descanso o hablar con alguien de confianza.\",\n","        \"Es normal sentirse triste a veces üíô. Estoy aqu√≠ para escucharte.\"\n","    ],\n","    \"ansioso\": [\n","        \"Trata de respirar profundo unos segundos üßò.\",\n","        \"Puedes relajarte con m√∫sica tranquila o una caminata corta üåø.\"\n","    ],\n","    \"feliz\": [\n","        \"¬°Qu√© bueno! üòÑ Me alegra saberlo.\",\n","        \"Sigue disfrutando tu d√≠a ‚ú®.\"\n","    ],\n","    \"enojado\": [\n","        \"Entiendo, la ira puede ser intensa üî•. Tomar un respiro ayuda.\",\n","        \"Hablar o escribir sobre lo que te molesta puede aliviarte üí≠.\"\n","    ],\n","    \"ayuda\": [\n","        \"Estoy aqu√≠ para escucharte ü§ù. ¬øQuieres que te conecte con un especialista?\",\n","        \"No est√°s solo, podemos buscar ayuda juntos üí¨.\"\n","    ],\n","    \"neutral\": [\n","        \"¬°Hola! üòä ¬øC√≥mo te encuentras hoy?\",\n","        \"Qu√© gusto saludarte üëã ¬øC√≥mo ha estado tu d√≠a?\",\n","        \"Gracias por conversar conmigo üôå\"\n","    ],\n","    \"desconocido\": [\n","        \"Gracias por compartir. Cu√©ntame un poco m√°s para entenderte mejor ü§î.\"\n","    ]\n","}\n","\n","# --------------------------------------------\n","# 4Ô∏è‚É£ An√°lisis de emoci√≥n y riesgo\n","# --------------------------------------------\n","def analizar_texto(texto):\n","    X_new = vectorizer.transform([texto])\n","    emocion = clf.predict(X_new)[0]\n","\n","    if emocion == \"neutral\":\n","        riesgo = random.randint(0, 10)\n","    elif emocion == \"feliz\":\n","        riesgo = random.randint(0, 25)\n","    elif emocion == \"enojado\":\n","        riesgo = random.randint(40, 60)\n","    elif emocion == \"triste\":\n","        riesgo = random.randint(60, 80)\n","    elif emocion == \"ansioso\":\n","        riesgo = random.randint(70, 90)\n","    elif emocion == \"ayuda\":\n","        riesgo = random.randint(80, 100)\n","    else:\n","        riesgo = random.randint(30, 70)\n","    return emocion, riesgo\n","\n","# --------------------------------------------\n","# 5Ô∏è‚É£ Guardar en Firebase\n","# --------------------------------------------\n","def guardar_en_firebase(usuario, mensaje, emocion, riesgo):\n","    data = {\n","        \"usuario\": usuario,\n","        \"mensaje\": mensaje,\n","        \"emocion\": emocion,\n","        \"riesgo_emocional\": riesgo,\n","        \"fecha\": datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n","    }\n","    db.collection(\"conversaciones\").add(data)\n","    time.sleep(1)\n","    print(\"üíæ Conversaci√≥n guardada en Firebase.\")\n","\n","# --------------------------------------------\n","# 6Ô∏è‚É£ Chat principal\n","# --------------------------------------------\n","def chatbot():\n","    print(\"üí¨ EMOTIBOT PMV2 - Versi√≥n Corregida (con 'neutral')\")\n","    usuario = input(\"üë§ Ingresa tu nombre: \").strip()\n","\n","    while True:\n","        texto = input(\"\\nT√∫: \").strip()\n","        if texto.lower() in [\"salir\", \"chao\", \"adios\", \"finalizar\"]:\n","            print(\"üëã ¬°Cu√≠date mucho, hasta luego!\")\n","            break\n","\n","        emocion, riesgo = analizar_texto(texto)\n","        respuesta = random.choice(recomendaciones.get(emocion, recomendaciones[\"desconocido\"]))\n","\n","        print(f\"ü§ñ EMOTIBOT: {respuesta} (Riesgo emocional estimado: {riesgo}%)\")\n","\n","        guardar_en_firebase(usuario, texto, emocion, riesgo)\n","\n","        if riesgo >= 80 and emocion != \"neutral\":\n","            print(\"üö® Nivel alto detectado, te recomiendo contactar a un psic√≥logo del directorio üìû\")\n","\n","# --------------------------------------------\n","# 7Ô∏è‚É£ Ejecutar chatbot\n","# --------------------------------------------\n","chatbot()\n"]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"id":"v21h-dersilS"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["!pip install flask pyngrok\n","\n","from flask import Flask, render_template_string\n","from pyngrok import ngrok\n","\n","# Creamos la app Flask\n","app = Flask(__name__)\n","\n","# ==== HTML del panel (versi√≥n simple) ====\n","HTML_PANEL = \"\"\"\n","<!DOCTYPE html>\n","<html lang=\"es\">\n","<head>\n","    <meta charset=\"UTF-8\">\n","    <title>Panel del Psic√≥logo</title>\n","    <style>\n","        body {\n","            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n","            background: linear-gradient(135deg, #9FACE6, #74EBD5);\n","            margin: 0; padding: 40px;\n","            color: #333;\n","        }\n","        h1 { text-align:center; }\n","        table {\n","            border-collapse: collapse;\n","            width: 100%;\n","            background-color: white;\n","            box-shadow: 0 4px 8px rgba(0,0,0,0.1);\n","        }\n","        th, td {\n","            padding: 12px;\n","            border-bottom: 1px solid #ddd;\n","            text-align: left;\n","        }\n","        th { background-color: #6C63FF; color: white; }\n","        tr:hover { background-color: #f5f5f5; }\n","    </style>\n","</head>\n","<body>\n","    <h1>üë©‚Äç‚öïÔ∏è Panel de Psic√≥logos</h1>\n","    <p style=\"text-align:center;\">Lista de estudiantes derivados</p>\n","    <table>\n","        <tr><th>Estudiante</th><th>Motivo</th><th>Estado</th></tr>\n","        <tr><td>Ana P√©rez</td><td>Ansiedad</td><td>Pendiente</td></tr>\n","        <tr><td>Juan Torres</td><td>Depresi√≥n</td><td>En seguimiento</td></tr>\n","        <tr><td>Mar√≠a L√≥pez</td><td>Estr√©s acad√©mico</td><td>Finalizado</td></tr>\n","    </table>\n","</body>\n","</html>\n","\"\"\"\n","\n","@app.route('/')\n","def panel_psicologo():\n","    return render_template_string(HTML_PANEL)\n","\n","# ==== Crear el t√∫nel ngrok ====\n","public_url = ngrok.connect(5000)\n","print(\"üåê Enlace p√∫blico:\", public_url)\n","\n","# ==== Iniciar el servidor Flask ====\n","app.run(port=5000)\n"],"metadata":{"id":"_na04ZjhmlOD"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from pyngrok import ngrok\n","ngrok.set_auth_token(\"QCBOE5JQ2FZLGEIEKCQY7TJSSW3RKMQT\")\n","print(\"‚úÖ Token configurado correctamente.\")"],"metadata":{"id":"2gqwaNSzmnHD"},"execution_count":null,"outputs":[]}]}